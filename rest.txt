 "REpresentational State Transfer",
 la clave de REST es que un servicio REST no tiene estado, lo que quiere decir que, entre dos llamadas cualesquiera,
 el servicio pierde todos sus datos. Esto es, que no se puede llamar a un servicio REST 
 y pasarle unos datos (p. ej. un usuario y una contraseña) y esperar que “nos recuerde” en la siguiente petició

las implementaciones concretas siguen cuatro principios básicos de diseño de servicios Web de REST:

    Utilice métodos HTTP de forma explícita.
    Sea sin estados.
    Exponga los URIS como estructuras de directorios.
    Transfiera XML, JavaScript Object Notation (JSON), o ambos


SOAP es el acrónimo de “Simple Object Access Protocol” 
   es un protocolo extraordinariamente complejo pensado para dar soluciones 
   a casi cualquier necesidad en lo que a comunicaciones se refiere,

Una diferencia fundamental entre un servicio web clásico (SOAP) y un servicio REST es que el primero está orientado a RPC,
 es decir, a invocar métodos sobre un servicio remoto, mientras que el segundo está orientado a recursos. Es decir, 
 operamos sobre recursos, no sobre servicios.

 En una API REST la idea de “servicio” como tal desaparece. Lo que tenemos son recursos, accesibles por identificadores (URIs).
  Sobre esos recursos podemos realizar acciones, generalmente diferenciadas a través de verbos HTTP distintos. 

   RPC (Remote Procedure Call – Llamada a método remoto)