-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT VEHICLE_PART_LOCATION_ID, RFID
FROM VEHICLE_PART_LOCATION
INNER JOIN vehicle_part
ON VEHICLE_PART_LOCATION.VEHICLE_PART_ID = vehicle_part.VEHICLE_PART_ID;


-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT DISTINCT  STATE_PROVINCE
FROM location ORDER BY STATE_PROVINCE ASC

-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT VEHICLE_ID
FROM vehicle WHERE NOT EXISTS(
    SELECT VEHICLE_ID FROM VEHICLE_PART 
    WHERE VEHICLE_PART.VEHICLE_ID =vehicle.VEHICLE_ID
    )

SELECT VEHICLE_PART_ID, ARRIVED_TIMESTAMP
FROM vehicle_PART_LOCATION 
    WHERE (vehicle_PART_LOCATION.LOCATION_ID = 3 
    OR vehicle_PART_LOCATION.LOCATION_ID = 6
    OR vehicle_PART_LOCATION.LOCATION_ID = 12)
    AND vehicle_PART_LOCATION.LEFT_TIMESTAMP is not null

-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT VEHICLE_ID
FROM vehicle WHERE NOT EXISTS(
    SELECT VEHICLE_ID FROM VEHICLE_PART 
    WHERE VEHICLE_PART.VEHICLE_ID =vehicle.VEHICLE_ID
    )

    
-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT VEHICLE_PART_LOCATION_ID, RFID
FROM VEHICLE_PART_LOCATION
INNER JOIN vehicle_part
ON VEHICLE_PART_LOCATION.VEHICLE_PART_ID = vehicle_part.VEHICLE_PART_ID;

SELECT  product_category.name, COUNT(*) 
FROM product INNER JOIN product_category 
on product_category.product_category_id = product.product_category_id  
GROUP BY product_category.name

SELECT * FROM (SELECT  CUSTOMER.city, COUNT(*) as CUSTOMER_COUNT
FROM CUSTOMER 
GROUP BY CUSTOMER.city )
WHERE 1<CUSTOMER_COUNT

-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT VEHICLE.VIN , RFID, PART_NAME
FROM VEHICLE
INNER JOIN vehicle_part
ON VEHICLE.VEHICLE_ID = vehicle_part.VEHICLE_ID
WHERE VEHICLE.MAKE <> VEHICLE_PART.MAKE AND VEHICLE.MODEL <> VEHICLE_PART.MODEL AND VEHICLE.YEAR <> VEHICLE_PART.YEAR

-- SQL request(s)​​​​​​‌​​‌​​‌‌​‌‌‌​‌‌​‌​​‌​‌​​​ below
SELECT * FROM (SELECT  CUSTOMER.city, COUNT(*) as CUSTOMER_COUNT
FROM CUSTOMER 
GROUP BY CUSTOMER.city )
WHERE 1<CUSTOMER_COUNT